openapi: 3.0.3
info:
  title: Test Service Wrapped
  version: 1.0.0
  description: |
    A simple test service for validator testing.

    # Authorization and authentication

    The "Camara Security and Interoperability Profile" provides details of how an
    API consumer requests an access token. Please refer to Identity and Consent
    Management (https://github.com/camaraproject/IdentityAndConsentManagement/)
    for the released version of the profile.

    The specific authorization flows to be used will be agreed upon during the
    onboarding process, happening between the API consumer and the API provider,
    taking into account the declared purpose for accessing the API, whilst also
    being subject to the prevailing legal framework dictated by local legislation.

    In cases where personal data is processed by the API and users can exercise
    their rights through mechanisms such as opt-in and/or opt-out, the use of
    three-legged access tokens is mandatory. This ensures that the API remains
    in compliance with privacy regulations, upholding the principles of
    transparency and user-centric privacy-by-design.

    # Additional CAMARA error responses

    The list of error codes in this API specification is not exhaustive.
    Therefore the API specification may not document some non-mandatory error
    statuses as indicated in `CAMARA API Design Guide`.

    Please refer to the `CAMARA_common.yaml` of the Commonalities Release
    associated to this API version for a complete list of error responses.
    The applicable Commonalities Release can be identified in the
    `API Readiness Checklist` document associated to this API version.

    As a specific rule, error `501 - NOT_IMPLEMENTED` can be only a possible
    error response if it is explicitly documented in the API.

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-camara-commonalities: "0.6"

externalDocs:
  description: Product documentation at CAMARA
  url: https://github.com/camaraproject/TestService

servers:
  - url: '{apiRoot}/test-service-wrapped/v1'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root, defined by the service provider

paths:
  /test:
    get:
      operationId: getTest
      summary: Get test data
      description: >
        Retrieves test data from the service. This operation is used for
        validation testing purposes.
      security:
        - openId:
            - test-service:read
      parameters:
        - name: X-Correlator
          in: header
          required: false
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      responses:
        '200':
          description: Success
          headers:
            X-Correlator:
              description: Correlation id for the different services
              schema:
                $ref: '#/components/schemas/XCorrelator'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'

components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: >-
        https://example.com/.well-known/openid-configuration

  schemas:
    TestResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Test message

    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description

    XCorrelator:
      type: string
      pattern: ^[a-zA-Z0-9-_:;.\/<>{}]{0,256}$
      description: Correlation id for the different services
      example: "2438f6da-c1de-41df-9680-b3b21bb5c2eb"

  responses:
    Generic400:
      description: Bad Request
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            InvalidArgument:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Invalid input parameters

    Generic401:
      description: Unauthorized
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            Unauthenticated:
              value:
                status: 401
                code: UNAUTHENTICATED
                message: >-
                  Request not authenticated due to missing, invalid, or
                  expired credentials

    Generic403:
      description: Forbidden
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            PermissionDenied:
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permission

    Generic500:
      description: Internal Server Error
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            InternalError:
              value:
                status: 500
                code: INTERNAL
                message: Server error

    Generic503:
      description: Service Unavailable
      headers:
        X-Correlator:
          description: Correlation id for the different services
          schema:
            $ref: '#/components/schemas/XCorrelator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            Unavailable:
              value:
                status: 503
                code: UNAVAILABLE
                message: Service unavailable
